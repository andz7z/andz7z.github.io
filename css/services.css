#services {
    height: 200vh; /* face secțiunea 1.5x înălțimea ecranului */
}
:root {
    /* Variabile pentru carusel - tema alb/negru/gri/oțel */
    --mzaPagH: 60px;
    --mzaC-slideW: min(80vw, 800px);
    --mzaCardH: 500px;
    --mzaC-glass: rgba(255, 255, 255, 0.08);
    --mzaC-accent: #ffffff;
    --mzaC-accent2: #c0c0c0;
    --mzaC-fg: #ffffff;
    --mzaC-glow: 0 0 20px rgba(255, 255, 255, 0.3);
    
    /* Variabile pentru paralaxă */
    --mzaParX: 0px;
    --mzaParY: 0px;
    --mzaParBgX: 0px;
    --mzaParBgY: 0px;
}

#services {
  position: relative;
  overflow: hidden;
  background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 50%, #0a0a0a 100%);
}

#services * {
  box-sizing: border-box;
}

.mzaCarousel {
  position: relative;
  height: 100vh;
  max-width: 100vw;
  margin: 0 auto;
  padding: 0 18px;
  overflow: hidden;
  contain: layout paint;
  touch-action: none;
}

.mzaCarousel-viewport {
  position: relative;
  outline: none;
  overflow: hidden;
  height: 100%;
}

.mzaCarousel-track {
  position: relative;
  height: calc(100% - var(--mzaPagH) - max(env(safe-area-inset-bottom), 12px));
  transform-style: preserve-3d;
  perspective: 1200px;
  overflow: hidden;
}

.mzaCarousel-slide {
  position: absolute;
  top: calc(50% + 5px);
  left: 50%;
  width: var(--mzaC-slideW);
  height: min(var(--mzaCardH), calc(100% - 50px));
  transform-style: preserve-3d;
  display: grid;
  place-items: center;
  border-radius: 22px;
  overflow: hidden;
  will-change: transform, filter;
}

.mzaCard {
  position: relative;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  overflow: hidden;
  background: var(--mzaC-glass);
  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.6);
  backdrop-filter: saturate(120%) blur(8px);
  transform: translateZ(0);
  cursor: grab;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.mzaCard::before {
  content: "";
  position: absolute;
  inset: -2%;
  background: var(--mzaCard-bg) center/cover no-repeat;
  background-size: cover;
  background-position: center;
  filter: contrast(1.05) saturate(1.1) brightness(0.85) grayscale(0.2);
  transform: translateZ(-60px) scale(1.18)
    translate3d(var(--mzaParBgX, 0px), var(--mzaParBgY, 0px), 0);
  transition: transform 800ms cubic-bezier(0.2, 0.7, 0, 1),
    filter 800ms cubic-bezier(0.2, 0.7, 0, 1);
}

.mzaCard::after {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(
    180deg,
    rgba(0, 0, 0, 0.4) 0%,
    rgba(0, 0, 0, 0.6) 45%,
    rgba(0, 0, 0, 0.4) 100%
  );
}

/* ARANJARE MAI AERISITĂ PENTRU CONȚINUT */
.mzaCard-head {
  position: absolute;
  inset: 30px 30px auto 30px; /* Mai mult spațiu */
  z-index: 2;
  text-align: center;
}

.mzaCard-title {
  margin: 0 0 10px 0;
  font-weight: 700;
  letter-spacing: 1px;
  font-size: clamp(24px, 3.5vw, 42px);
  text-shadow: 2px 2px 20px rgba(0, 0, 0, 0.8);
  line-height: 1.1;
  cursor: text;
  color: #ffffff;
}

.mzaCard-kicker {
  margin: 0;
  color: var(--mzaC-accent2);
  font-size: clamp(13px, 1.8vw, 16px);
  font-weight: 500;
  text-shadow: 1px 1px 12px rgba(0, 0, 0, 0.7);
  cursor: text;
  letter-spacing: 0.5px;
  text-transform: uppercase;
}

.mzaCard-text {
  display: -webkit-box;
  line-clamp: 4;
  -webkit-line-clamp: 4;
  -webkit-box-orient: vertical;
  overflow: hidden;
  position: absolute;
  inset: auto 30px 100px 30px; /* Mai mult spațiu jos */
  z-index: 2;
  max-width: none;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 25px;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: 12px;
  text-wrap: balance;
  cursor: text;
  color: #e0e0e0;
  font-size: clamp(14px, 1.6vw, 16px);
  line-height: 1.5;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.mzaCard-actions {
  position: absolute;
  inset: auto auto 25px 50%; /* Centrat pe orizontală */
  transform: translateX(-50%);
  z-index: 2;
  text-align: center;
}

.mzaBtn {
  appearance: none;
  border: 1px solid #ffffff;
  border-radius: 12px;
  padding: 14px 32px;
  font-weight: 600;
  color: #000000;
  background: linear-gradient(
    135deg,
    #ffffff 0%,
    #f0f0f0 25%,
    #e8e8e8 50%,
    #f0f0f0 75%,
    #ffffff 100%
  );
  box-shadow: 0 4px 20px var(--mzaC-glow);
  cursor: pointer;
  transition: all 0.3s ease;
  letter-spacing: 0.5px;
  font-size: 14px;
}

.mzaBtn:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 25px rgba(255, 255, 255, 0.4);
  background: linear-gradient(
    135deg,
    #f8f8f8 0%,
    #ffffff 25%,
    #f8f8f8 50%,
    #ffffff 75%,
    #f8f8f8 100%
  );
}

.mzaBtn:active {
  transform: translateY(0);
  box-shadow: 0 3px 15px rgba(255, 255, 255, 0.3);
}

/* CONTROLE CARUSEL */
.mzaCarousel-controls {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  pointer-events: none;
}

.mzaCarousel-prev,
.mzaCarousel-next {
  pointer-events: auto;
  position: relative;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 0;
  background: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(10px);
  color: var(--mzaC-fg);
  font-size: 24px;
  display: grid;
  place-items: center;
  cursor: pointer;
  transition: all 0.3s ease;
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.mzaCarousel-prev {
  margin-left: 10px;
}

.mzaCarousel-next {
  margin-right: 10px;
}

.mzaCarousel-prev:hover,
.mzaCarousel-next:hover {
  background: rgba(0, 0, 0, 0.8);
  transform: scale(1.1);
  border-color: rgba(255, 255, 255, 0.4);
}

.mzaCarousel-prev:active,
.mzaCarousel-next:active {
  transform: scale(0.95);
}

/* PAGINARE */
.mzaCarousel-pagination {
  position: absolute;
  left: 0;
  right: 0;
  bottom: max(30px, env(safe-area-inset-bottom));
  display: flex;
  gap: 12px;
  justify-content: center;
  align-items: center;
  pointer-events: auto;
}

.mzaCarousel-dot {
  width: 14px;
  height: 14px;
  border-radius: 999px;
  background: rgba(255, 255, 255, 0.3);
  border: 0;
  cursor: pointer;
  transition: all 0.3s ease;
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.mzaCarousel-dot[aria-selected="true"] {
  background: linear-gradient(135deg, var(--mzaC-accent2), var(--mzaC-accent));
  transform: scale(1.4);
  box-shadow: 0 0 15px rgba(255, 255, 255, 0.4);
}

/* PROGRES */
.mzaCarousel-progress {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  height: 4px;
  background: rgba(255, 255, 255, 0.1);
  z-index: 9999;
  overflow: hidden;
}

.mzaCarousel-progressBar {
  display: block;
  height: 100%;
  width: 100vw;
  transform-origin: left;
  transform: scaleX(0);
  will-change: transform;
  background: linear-gradient(90deg, var(--mzaC-accent2), var(--mzaC-accent));
}

/* SLIDE ACTIV - EFECTE ÎMBUNĂTĂȚITE */
.mzaCarousel-slide[data-state="active"] .mzaCard::before {
  filter: contrast(1.1) saturate(1.15) brightness(0.9) grayscale(0.1);
}

.mzaCarousel-slide[data-state="active"] .mzaCard {
  box-shadow: 0 30px 80px rgba(0, 0, 0, 0.7),
    0 0 0 1px rgba(255, 255, 255, 0.15) inset;
}

/* EFECTE PARALAXĂ */
.mzaPar-1,
.mzaPar-2,
.mzaPar-3 {
  will-change: transform;
  transition: transform 500ms cubic-bezier(0.2, 0.7, 0, 1);
}

.mzaPar-1 {
  transform: translate3d(
    calc(var(--mzaParX, 0px) * 0.35),
    calc(var(--mzaParY, 0px) * 0.35),
    0
  );
}

.mzaPar-2 {
  transform: translate3d(
    calc(var(--mzaParX, 0px) * 0.25),
    calc(var(--mzaParY, 0px) * 0.25),
    0
  );
}

.mzaPar-3 {
  transform: translate3d(
    calc(var(--mzaParX, 0px) * 0.18),
    calc(var(--mzaParY, 0px) * 0.18),
    0
  );
}

/* RESPONSIVE DESIGN */
@media (max-width: 1000px) {
  :root {
    --mzaC-slideW: min(92vw, 620px);
  }
  
  .mzaCard-head {
    inset: 25px 25px auto 25px;
  }
  
  .mzaCard-title {
    font-size: clamp(22px, 4vw, 32px);
  }
  
  .mzaCard-kicker {
    font-size: clamp(12px, 2vw, 14px);
  }
  
  .mzaCard-text {
    inset: auto 25px 90px 25px;
    padding: 20px;
  }
}

@media (max-width: 768px) {
  :root {
    --mzaC-slideW: min(94vw, 560px);
  }
  
  .mzaCard-head,
  .mzaCard-text {
    text-align: center;
    max-width: 90%;
    margin: 0 auto;
  }
  
  .mzaCard-head {
    inset: 20px 20px auto 20px;
  }
  
  .mzaCard-text {
    inset: auto 20px 80px 20px;
  }
  
  .mzaCard-text::after {
    background-image: linear-gradient(
      0deg,
      rgba(0, 0, 0, 0.8) 5%,
      rgba(0, 0, 0, 0) 30%
    );
  }
  
  .mzaCarousel-prev,
  .mzaCarousel-next {
    width: 44px;
    height: 44px;
    font-size: 20px;
  }
}

@media (max-width: 560px) {
  :root {
    --mzaC-slideW: min(96vw, 520px);
    --mzaCardH: 450px;
  }
  
  .mzaCard-head {
    inset: 15px 15px auto 15px;
  }
  
  .mzaCard-text {
    inset: auto 15px 70px 15px;
    padding: 15px;
    font-size: 14px;
  }
  
  .mzaBtn {
    padding: 12px 24px;
    font-size: 13px;
  }
}

@media (max-height: 400px) {
  .mzaCard-text {
    display: none;
  }
}

@media (max-height: 280px) {
  .mzaCard-kicker {
    display: none;
  }
}

@media (max-height: 240px) {
  .mzaBtn {
    display: none;
  }
}

.mzaCard::before {
  z-index: 0;
  opacity: 1;
  visibility: visible;
}

.mzaCard * {
  position: relative;
  z-index: 1;
}
.mzaCard-text {
  display: -webkit-box;
  line-clamp: 3;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  position: absolute;
  left: 50%;
  bottom: 120px; /* Pozitionat mai sus de buton */
  transform: translateX(-50%);
  z-index: 2;
  width: 80%; /* Latime controlata */
  max-width: 600px;
  background-color: rgba(0, 0, 0, 0.6);
  padding: 20px;
  backdrop-filter: blur(15px);
  -webkit-backdrop-filter: blur(15px);
  border-radius: 12px;
  text-wrap: balance;
  cursor: text;
  color: #e0e0e0;
  font-size: clamp(14px, 1.6vw, 16px);
  line-height: 1.5;
  border: 1px solid rgba(255, 255, 255, 0.15);
  text-align: center;
}

.mzaCard-actions {
  position: absolute;
  left: 50%;
  bottom: 40px; /* Mai aproape de marginea de jos */
  transform: translateX(-50%);
  z-index: 2;
  text-align: center;
}

.mzaBtn {
  appearance: none;
  border: 1px solid #ffffff;
  border-radius: 12px;
  padding: 14px 32px;
  font-weight: 600;
  color: #000000;
  background: linear-gradient(
    135deg,
    #ffffff 0%,
    #f0f0f0 25%,
    #e8e8e8 50%,
    #f0f0f0 75%,
    #ffffff 100%
  );
  box-shadow: 0 4px 20px var(--mzaC-glow);
  cursor: pointer;
  transition: all 0.3s ease;
  letter-spacing: 0.5px;
  font-size: 14px;
  white-space: nowrap;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .mzaCard-text {
    width: 90%;
    bottom: 100px;
    padding: 15px;
  }
  
  .mzaCard-actions {
    bottom: 30px;
  }
  
  .mzaBtn {
    padding: 12px 24px;
    font-size: 13px;
  }
}

@media (max-width: 560px) {
  .mzaCard-text {
    width: 95%;
    bottom: 90px;
    padding: 12px;
  }
  
  .mzaCard-actions {
    bottom: 25px;
  }
  
  .mzaBtn {
    padding: 10px 20px;
    font-size: 12px;
  }
}

#mzParallax {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  color: white;
  font-family: var(--font-text);
}

#mzParallax .sectionWrapper {
  width: 100%;
  height: 100%;
  perspective: 1000px;
  display: flex;
  align-items: center;
  justify-content: center;
}

#mzParallax figure {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
}

#mzParallax h1 {
  font-family: var(--font-title);
  font-size: clamp(2.5rem, 6vw, 6rem);
  text-transform: uppercase;
  background: linear-gradient(90deg, #fff, #bbb, #666);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
  line-height: 1.1;
  margin: 0;
  pointer-events: none;
}

#mzParallax figcaption {
  font-size: 1.2rem;
  max-width: 700px;
  margin: 1.5rem auto 0;
  opacity: 0.8;
  line-height: 1.6;
}

#mzParallax svg {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.3));
}
#mzParallax {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  color: white;
  font-family: var(--font-text);
}

#mzParallax .sectionWrapper {
  width: 100%;
  height: 100%;
  perspective: 1000px;
  display: flex;
  align-items: center;
  justify-content: center;
}

#mzParallax figure {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
}

#mzParallax h1 {
  font-family: var(--font-title);
  font-size: clamp(2.5rem, 6vw, 6rem);
  text-transform: uppercase;
  background: linear-gradient(90deg, #fff, #bbb, #666);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
  line-height: 1.1;
  margin: 0;
  pointer-events: none;
}

#mzParallax figcaption {
  font-size: 1.2rem;
  max-width: 700px;
  margin: 1.5rem auto 0;
  opacity: 0.8;
  line-height: 1.6;
}

#mzParallax svg {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.3));
}
@import url('https://unpkg.com/normalize.css') layer(normalize);

@layer normalize, base, demo, images, controls, debug, intro;

@layer intro {
  details:nth-of-type(3) {
    animation:
      slide .75s 0.5s both var(--bounce),
      start .6s 1.05s var(--bounce) both,
      color-in .6s 1.25s var(--bounce) both;
  }
  details:nth-of-type(1),
  details:nth-of-type(2) {
    --from-y: 75%;
  }
  details:nth-of-type(4),
  details:nth-of-type(5) {
    --from-y: -75%;
  }
  details:nth-of-type(2),
  details:nth-of-type(4) {
    --index: 1;
  }
  details:nth-of-type(1),
  details:nth-of-type(5) {
    --index: 2;
  }
  details:nth-of-type(1),
  details:nth-of-type(2),
  details:nth-of-type(4),
  details:nth-of-type(5) {
    --from-scale: 1;
    --from-x: 35%;
    animation:
      start .6s calc(1.05s + (var(--index) * 0.08s)) var(--bounce) both,
      fade-in .6s calc(1.05s + (var(--index) * 0.08s)) var(--bounce) both,
      slide .6s calc(1.05s + (var(--index) * 0.08s)) var(--bounce) both,
      color-in .6s calc(1.25s + (var(--index) * 0.08s)) var(--bounce) both;
  }
  @keyframes slide {
    0% {
      scale: var(--from-scale, 0);
      translate: var(--from-x, -200px) var(--from-y, 0);
    }
  }
  @keyframes start {
    0% {
      width: var(--sizing);
    }
  }
  @keyframes color-in {
    0% {
      color: #0000;
    }
  }
  @keyframes fade-in {
    0% {
      opacity: 0;
    }
  }
}
@layer debug {
  /* this is for the debug... */
  [data-debug='true'] {
    section:not(:has([open])) .column:last-of-type div:first-of-type,
    section:has(details:nth-of-type(1)[open]) .column:last-of-type div:nth-of-type(2),
    section:has(details:nth-of-type(2)[open]) .column:last-of-type div:nth-of-type(3),
    section:has(details:nth-of-type(3)[open]) .column:last-of-type div:nth-of-type(4),
    section:has(details:nth-of-type(4)[open]) .column:last-of-type div:nth-of-type(5),
    section:has(details:nth-of-type(5)[open]) .column:last-of-type div:nth-of-type(6) {
      outline: 4px dashed hotpink;
    }

    section:not(:has(details:nth-of-type(1)[open])) .column:last-of-type .img-block:nth-of-type(2),
  section:not(:has(details:nth-of-type(2)[open])) .column:last-of-type .img-block:nth-of-type(3) {
    .img-wrapper {
      opacity: 0.75;
    }
  }
    
    
    
    section:has([open]) .column:last-of-type div:first-of-type,
    section:not(:has(details:nth-of-type(1)[open])) .column:last-of-type div:nth-of-type(2),
    section:not(:has(details:nth-of-type(2)[open])) .column:last-of-type div:nth-of-type(3),
    section:not(:has(details:nth-of-type(3)[open])) .column:last-of-type div:nth-of-type(4),
    section:not(:has(details:nth-of-type(4)[open])) .column:last-of-type div:nth-of-type(5),
    section:not(:has(details:nth-of-type(5)[open])) .column:last-of-type div:nth-of-type(6) {
      outline: 4px dashed green;
    }
    section .column:first-of-type {
      background: repeating-linear-gradient(45deg, hsl(140 100% 50% / 0.5) 0 1px, #0000 1px 6px);
    }
    section .column:last-of-type {
      background: repeating-linear-gradient(45deg, hsl(280 90% 50% / 0.5) 0 1px, #0000 1px 6px);
    }
    section .column:last-of-type img {
      background: repeating-linear-gradient(-45deg, hsl(210 90% 50% / 0.35) 0 1px, #0000 1px 6px);
    }
    section .column:last-of-type div {
      outline: 2px dashed red;
    }
    summary {
      outline: 4px dashed red;
      outline-offset: -4px;
    }
    [open] summary {
      opacity: 0.5;
    }
    [open] .content {
      opacity: 0.25;
    }
    details {
      outline: 4px dashed blue;
      outline-offset: -4px;
    }
  }
}

@layer controls {


  [data-action] {

    display: grid;
    place-items: center;
    width: 36px;
    aspect-ratio: 1;
    border: 0;
    cursor: pointer;
    padding: 0;
    border-radius: 50%;
    background: var(--background);
    transition-property: opacity, background, translate, transform;
    transition-duration: 0.26s;
    transition-timing-function: var(--ease);
    z-index: 20;
  
    &:hover {
      background: var(--hover-background);
    }
  
    &::after {
      content: '';
      position: absolute;
      inset: -4px;
    }
  
    svg {
      width: 22px;
      color: #fff;
      stroke-width: 3;
    }
  }
  [data-action=next],
  [data-action=previous] {
    position: absolute;
    top: 50%;
    left: 1rem;
  }
  [data-action=previous] {
    translate: 0 -150%;
  }
  [data-action=next] {
    translate: 0 50%;

    svg {
      rotate: 180deg;
    }
  }
  [data-action=exit] {
    position: absolute;
    right: 1rem;
    top: 1rem;

    svg {
      rotate: 45deg;
    }
  }

  section:not(:has([open])) [data-action] {
    opacity: 0;
    transform: translateY(1rem);
    pointer-events: none;
  }
}

@layer images {
  body {
    overflow-x: hidden;
    --distance: 15%;
  }
  
  section .img-wrapper {
    display: inline-block;
    transform: translateX(0);
    transition-duration: calc(var(--speed) * 0), calc(var(--speed) * 0.65), calc(var(--speed) * 0.65);
    transition-duration: calc(var(--speed) * 0), calc(var(--speed) * 0.35), calc(var(--speed) * 1.15);
    transition-timing-function: var(--ease), var(--ease), var(--bounce);
    transform-origin: 100% 150%;
    transition-property: transform, opacity, scale;
    /* translate: 0 0;
    scale: 0.6; */
    /* opacity: 0; */
    /* z-index: 2; */
  }
  /* translation only translates when we've opened up the "details"  */
  section[data-checking-details=true] .img-wrapper {
    transform-origin: 50% 100%;
    transition-timing-function: var(--ease);
    transition-duration: calc(var(--speed) * 0.6), calc(var(--speed) * 0.25), calc(var(--speed) * 0.65);
  }
  
  section .img-block:nth-of-type(1) {
    z-index: 10;
  }

  section .img-block:nth-of-type(1) .img-wrapper {
    transform-origin: 50% 50%;
    transition-property: translate, opacity, scale;
    transition-duration: calc(var(--speed) * .4), calc(var(--speed) * 0.35), calc(var(--speed) * 1.15);
    transition-timing-function: ease-in, var(--ease), var(--bounce);
  }
  /* this is the closed states so offset to the right */
  /* section:not(:has([open])) .column:last-of-type .img-block:first-of-type, */
  section:has(details:nth-of-type(1)[open]) .column:last-of-type .img-block:nth-of-type(2),
  section:has(details:nth-of-type(2)[open]) .column:last-of-type .img-block:nth-of-type(3),
  section:has(details:nth-of-type(3)[open]) .column:last-of-type .img-block:nth-of-type(4),
  section:has(details:nth-of-type(4)[open]) .column:last-of-type .img-block:nth-of-type(5),
  section:has(details:nth-of-type(5)[open]) .column:last-of-type .img-block:nth-of-type(6) {
    translate: var(--distance) 0;
    z-index: 2;
    
    .img-wrapper {
      transform: translateX(calc(var(--distance) * -1)); 
      transition-delay: calc(var(--speed) * 0.2);
    }
  }
  
  /* first one is a special case */
  section:not(:has([open])) div.column:nth-of-type(2)  div.img-block:first-of-type {
    translate: 0 0;

    .img-wrapper {
      transform: translateX(0%);
      transition-delay: calc(var(--speed) * 0.2);
    }
  }

  /* this is for the default state */
  /* section:has([open]) .column:last-of-type .img-block:first-of-type, */
  /* this is the default non translated state before opening, requires different easing */
  section:not(:has(details:nth-of-type(1)[open])) .column:last-of-type .img-block:nth-of-type(2),
  section:not(:has(details:nth-of-type(2)[open])) .column:last-of-type .img-block:nth-of-type(3),
  section:not(:has(details:nth-of-type(3)[open])) .column:last-of-type .img-block:nth-of-type(4),
  section:not(:has(details:nth-of-type(4)[open])) .column:last-of-type .img-block:nth-of-type(5),
  section:not(:has(details:nth-of-type(5)[open])) .column:last-of-type .img-block:nth-of-type(6) {
    .img-wrapper {
      transition-property: translate, opacity, scale;
      transition-timing-function: ease-in, ease-out, ease-in;
      /* this offsets when off */
      /* translate: -60% 0; */
      translate: 0 0;
      scale: 0.9;
      opacity: 0;
      /* z-index: 1; */
    }
  }
  .img-block:nth-of-type(1) .img-wrapper img {
    object-position: calc(50% + 4rem) 50%;
  }
  .img-block:nth-of-type(2) .img-wrapper img {
    object-position: right;
  }
  section[data-checking-details=true] {
    &:not(:has(details:nth-of-type(1)[open])) .column:last-of-type .img-block:nth-of-type(2),
    &:not(:has(details:nth-of-type(2)[open])) .column:last-of-type .img-block:nth-of-type(3),
    &:not(:has(details:nth-of-type(3)[open])) .column:last-of-type .img-block:nth-of-type(4),
    &:not(:has(details:nth-of-type(4)[open])) .column:last-of-type .img-block:nth-of-type(5),
    &:not(:has(details:nth-of-type(5)[open])) .column:last-of-type .img-block:nth-of-type(6) {
      .img-wrapper {
        transform-origin: 50% 100%;
        /* transition-property: translate, opacity, scale;
        transition-timing-function: ease-in, ease-out, ease-in; */
        /* this offsets when off */
        translate: calc(var(--distance) * -1) 0;
        /* translate: 0 0;
        scale: 0.9;
        opacity: 0; */
        /* z-index: 1; */
      }
    } 
  }
  /* first one is a special case again */
  section:has([open]) .column:last-of-type .img-block:first-of-type {
    .img-wrapper {
      translate: 0 0;
      scale: 1.25;
      opacity: 0;
      /* z-index: 1; */
    }
  }
}

@layer demo {
  :root {
    --ease: cubic-bezier(.42,0,.58,1);
    --bounce:linear(
      0 0%, 0.4214 6.61%, 0.5762 9.59%,
      0.7047 12.55%, 0.8115 15.61%,
      0.8964 18.78%, 0.9614 22.13%,
      1.0078 25.74%, 1.0282 28.18%,
      1.0422 30.82%, 1.0503 33.7%,
      1.0527 36.95%, 1.0468 42.53%,
      1.015 58.45%, 1.0045 67.2%,
      0.9987 80.44%, 1 100%
    );
    /* --bounce: var(--ease); */
    --speed: 0.5s;
    --width: 300px;
    --sizing: 56px;
    --background: light-dark(hsl(0 0% 10% / 0.75), hsl(0 0% 40% / 0.5));
    --hover-background: light-dark(hsl(0 0% 18% / 0.75), hsl(0 0% 48% / 0.5));
  }

  section {
    margin-block: 2rem;
    display: flex;
    place-items: center;
    gap: 1rem;
    position: relative;
    min-height: 500px;
    /* height: 70vh; */
    aspect-ratio: 4 / 3;
    justify-content: flex-start;
    overflow: hidden;
    max-width: calc(100vw - 2rem);
    width: 800px;
    border-radius: 1rem;
    background: light-dark(#fff, #000);
    border: 2px solid color-mix(in oklch, canvasText, canvas 80%);
    container-type: inline-size;
    
    /* &[data-checking-details=true] {
      background: red;
      } */
      
      [data-action] {
        position: absolute;
      }
    }
    
  .column:first-of-type {
    padding-left: 4rem;
    display: grid;
    grid-auto-rows: auto;
    width: var(--width);
    place-items: center;
    justify-items: start;
    gap: .5rem;
    z-index: 20;
    flex: 1 0 var(--width);
  }

  .column:last-of-type {
    width: 100cqi;
    height: 100%;
    position: relative;
    display: grid;
    grid-auto-flow: row;
    place-items: center;
    gap: .675rem;
    pointer-events: none;
  }


  .column:last-of-type .img-block {
    position: absolute;
    inset: 0;

    .img-wrapper {
      width: 100%;
      object-fit: cover;
      height: 100%;
      
      img {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        aspect-ratio: 1;
        height: 100%;
        width: 100cqw;
        object-fit: cover;
        
      }
    }
  }
  
  summary {
    display: inline-flex;
    gap: 0.5rem;
    align-items: center;
    padding: 1.5rem;
    border-radius: calc(var(--sizing) * 0.5);
    height: var(--sizing);
    min-height: var(--sizing);
    cursor: pointer;
    z-index: 20;
    position: relative;
    transition-property: opacity, width;
    transition-duration: calc(var(--speed) * 0.5), calc(var(--speed) * 1.5);
    transition-timing-function: var(--ease), var(--bounce);
    transition-delay: calc(var(--speed) * 1.05), 0s;
    white-space: nowrap;
    font-weight: 600;

    outline-color: canvasText;

    
    svg {
      width: 24px;
      aspect-ratio: 1;
    }
  }
  
  [open] summary {
    opacity: 0;
    pointer-events: none;
    transition-delay: 0s;
    width: var(--width);
  }
  
  details {
    display: inline-block;
    border-radius: calc(var(--sizing) * 0.5);
    overflow: hidden;
    min-height: var(--sizing);
    background:var(--background);
    backdrop-filter: blur(20px) saturate(180%);
    color: #fff;
    transition: background 0.2s var(--ease);;

    &:hover:not([open]) {
      background: var(--hover-background);
    }
  }
  
  summary:marker {
    opacity: 0;
  }
  
  details::details-content {
    opacity: 0;
    transition-property: content-visibility, height, width, opacity;
    transition-duration: var(--speed), calc(var(--speed) * 1.6), calc(var(--speed) * 1.6), calc(var(--speed) * 0.5);
    transition-behavior: allow-discrete;
    transition-timing-function: var(--ease), var(--bounce), var(--bounce), var(--ease);
    overflow: visible;
    height: var(--sizing);
    margin-top: calc(var(--sizing) * -1);
    width: 120px;
    min-height: var(--sizing);
  }
  
  [open]::details-content {
    height: fit-content;
    width: var(--width);
    opacity: 1;
    transition-delay: 0s, 0s, 0s, calc(var(--speed) * 1);
  }
  .content {
    width: var(--width);
    min-height: var(--sizing);
  }
  
  details,
  details::details-content {
    interpolate-size: allow-keywords;
  }
  
  p {
    margin: 0;
    width: var(--width);
    padding: 1.5rem;
    display: inline-block;
  }
  
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
    color-scheme: light dark;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    background: light-dark(#fff, #000);
    display: grid;
    place-items: center;
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  body::before {
    --size: 45px;
    --line: color-mix(in hsl, canvasText, transparent 80%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        calc(var(--size) * 0.36) 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 0%
        calc(var(--size) * 0.32) / var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}

div.tp-dfwv {
  width: 256px;
  position: fixed;
  z-index: 999999;
}
